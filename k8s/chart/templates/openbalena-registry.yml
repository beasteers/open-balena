{{ with .Values.deployments.registry }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app: openbalena
    component: registry
  name: openbalena-registry
spec:
  serviceName: openbalena-registry
  replicas: {{ .replicas }}
  selector:
    matchLabels:
      app: openbalena
      component: registry
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: openbalena
        component: registry
    spec:
      containers:

      - image: '{{ .image }}:{{ .version }}'
        name: openbalena-registry
        resources: {}
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_RESOURCE
        env:
        - name: CONFD_BACKEND
          value: "ENV"
        - name: API_TOKENAUTH_CRT
          value: "{{ $.Values.keys.token_auth_pub }}"
        - name: BALENA_REGISTRY2_HOST
          value: "{{ .ingress.subdomain }}.{{ $.Values.hostname }}"
        - name: BALENA_ROOT_CA
          value: "{{ $.Values.certificates.root.ca }}"
        - name: BALENA_TOKEN_AUTH_ISSUER
          value: "{{ $.Values.deployments.api.ingress.subdomain }}.{{ $.Values.hostname }}"
        - name: BALENA_TOKEN_AUTH_REALM
          value: "https://{{ $.Values.deployments.api.ingress.subdomain }}.{{ $.Values.hostname }}/auth/v1/token"
        - name: COMMON_REGION
          value: "{{ $.Values.deployments.s3.config.region }}"
        - name: REGISTRY2_CACHE_ENABLED
          value: "false"
        - name: REGISTRY2_CACHE_ADDR
          value: "127.0.0.1:6379"
        - name: REGISTRY2_CACHE_DB
          value: "0"
        - name: REGISTRY2_CACHE_MAXMEMORY_MB
          value: "1024" # Megabytes
        - name: REGISTRY2_CACHE_MAXMEMORY_POLICY
          value: "allkeys-lru"
        - name: REGISTRY2_S3_REGION_ENDPOINT
          value: "{{ $.Values.deployments.s3.config.endpoint }}"
        - name: REGISTRY2_S3_BUCKET
          value: "{{ $.Values.deployments.s3.config.bucket }}"
        - name: REGISTRY2_S3_KEY
          value: "{{ $.Values.deployments.s3.config.access_key }}"
        - name: REGISTRY2_S3_SECRET
          value: "{{ $.Values.deployments.s3.config.secret_key }}"
        - name: REGISTRY2_SECRETKEY
          value: "{{ $.Values.keys.registry_secret_key }}"
        - name: REGISTRY2_STORAGEPATH
          value: "/data"
        volumeMounts:
        - mountPath: /data
          name: openbalena-registry-volume
          subPath: registry
        - mountPath: /run
          name: openbalena-registry-tmpfs0
        - mountPath: /sys/fs/cgroup
          name: openbalena-registry-tmpfs1
      volumes:
      - name: openbalena-registry-volume
        persistentVolumeClaim:
          claimName: openbalena-registry-volume
      - name: openbalena-registry-tmpfs0
        emptyDir:
          medium: Memory
      - name: openbalena-registry-tmpfs1
        emptyDir:
          medium: Memory
  volumeClaimTemplates:
  - metadata:
      name: openbalena-registry-volume
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .volume.storage }}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: openbalena
    component: registry
  name: openbalena-registry
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: openbalena
    component: registry
status:
  loadBalancer: {}
{{- end }}
